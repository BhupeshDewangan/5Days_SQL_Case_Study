1. You ire a Compensation analyst employed by a multinational corporation. Your Assignment is to Pinpoint Countries who give work fully remotely, for the title 'managers' Paying salaries Exceeding $90,Ã¸Ã¸Ã¸ USD.

select distinct(employee_residence)
from public."Data_Science_Salaries"
where (remote_ratio = 100) and job_title like '%Manager%' and salary_in_usd > 90000;


2. AS a remote work advocate Working for a progressive HR tech startup who place their freshers' clients IN large tech firms.
you're tasked WITH Identifying top 5 Country Having greatest count of large (company size) number of companies.

select company_location, count(company_size) as cnt
from public."Data_Science_Salaries"
where company_size = 'L' and experience_level = 'EN'
group by company_location
order by cnt desc
limit 5



3. Picture yourself AS a data scientist Working for a workforce management platform. Your objective is to calculate the percentage of employees. Who enjoy fully remote roles WITH salaries Exceeding $100,000 USD, Shedding light ON the attractiveness of high-paying remote positions IN today's job market.



with cte1 as (
select count(*) as cnt1 from public."Data_Science_Salaries" 
where remote_ratio = 100 and salary_in_usd > 100000
), 
cte2 as
(
	select count(*) as cnt2 from public."Data_Science_Salaries" 
)

select (cte1.cnt1 :: float) / (cte2.cnt2 :: float) from cte1, cte2

select (450 / 45) 


4. Imagine you're a data analyst Working for a global recruitment agency. Your Task is to identify the Locations where average salaries exceed the average salary for that job title IN market for entry level, helping your agency guide candidates towards lucrative opportunities.


select t1.job_title, t2.company_location, jda1, jda2 from
(
	
-- 	order by jda1 desc
	select job_title, avg(salary_in_usd) as jda2 from public."Data_Science_Salaries"
	group by job_title
) t1
inner join 
(
	select company_location, job_title, avg(salary_in_usd) as jda1 from public."Data_Science_Salaries"
	group by company_location, job_title
) t2

on t1.job_title = t2.job_title
order by t1.jda2 desc, t2.jda1 desc, t1.job_title asc, t2.company_location asc



5. You've been hired by a big HR Consultancy to look at how much people get paid IN different Countries. Your job is to Find out for each job title which Country pays the maximum average salary. This helps you to place your candidates IN those countries.


select * from
(
	select *, dense_rank() over(partition by job_title order by avgusd desc)  as rnk from
	(
		select company_location, job_title, avg(salary_in_usd) as avgusd from public."Data_Science_Salaries"
		group by company_location, job_title
	) t
)k
where k.rnk  = 1


6. As a data-driven Business consultant, different company Locations. Your goal is to few years (Countries WHERE data is available experiencing Sustained salary growth. you 've been hired by a multinational corporation to analyze salary trends across Pinpoint Locations WHERE the average salary Has consistently Increased over the Past for 3 years Only(present year and past two years) providing Insights into Locations




select company_location, work_year, avg(salary_in_usd) as avsd, count(work_year) as cnt from public."Data_Science_Salaries"
where work_year >= extract('year' from current_date) - 2
group by company_location, work_year
order by cnt desc



select company_location, avg(salary_in_usd) as avsd, count(distinct work_year) as cnt1
from public."Data_Science_Salaries"
where work_year >= (extract('year' from current_date) - 2)
group by company_location
having count(distinct work_year) = 3
-- order by cnt desc




using CTE :- 


with cte1 as
(
	select * from public."Data_Science_Salaries" where company_location in
	(	
		select company_location from
		(
				select company_location, avg(salary_in_usd) as avsd, count(distinct work_year) as cnt1
				from public."Data_Science_Salaries"
				where work_year >= (extract('year' from current_date) - 2)
				group by company_location
				having count(distinct work_year) = 3
		)t
	)
)


select company_location, 
round(max(case when work_year = 2022 then avsd end), 2) as avg_2022,
round(max(case when work_year = 2023 then avsd end), 2) as avg_2023,
round(max(case when work_year = 2024 then avsd end), 2) as avg_2024 
from (
	select company_location, work_year, avg(salary_in_usd) as avsd from cte1
	group by company_location, work_year
)t1 group by company_location
having round(max(case when work_year = 2024 then avsd end), 2) > round(max(case when work_year = 2023 then avsd end), 2) 
and round(max(case when work_year = 2023 then avsd end), 2) > round(max(case when work_year = 2022 then avsd end), 2)






7. Picture yourself AS a workforce strategist employed by a global HR tech startup. Your Mission is to Determine the percentage of fully remote work for each experience level 2021 and compare it with the corresponding figures for 2024, Highlighting any significant Increases or decreases IN remote work Adoption over the years.




select m.experience_level, m.remote1, n.remote2 from
(
-- this is for 2021
select *, (((t1.cnt2:: float) / (t1.cnt1 :: float)) * 100) as remote1 from
(
	select a.experience_level, a.cnt1, b.cnt2 from
	(
		select experience_level, count(*) as cnt1 from public."Data_Science_Salaries"
		where  work_year = 2021
		group by experience_level
	) a
	inner join 
	(
		select experience_level, count(*) as cnt2 from public."Data_Science_Salaries"
		where remote_ratio = 100 and work_year = 2021
		group by experience_level
	) b on a.experience_level = b.experience_level
) t1
)m
	
inner join
(
-- this is for 2024
select *, (((t2.cnt2:: float) / (t2.cnt1 :: float)) * 100) as remote2 from
(
	select a.experience_level, a.cnt1, b.cnt2 from
	(
		select experience_level, count(*) as cnt1 from public."Data_Science_Salaries"
		where  work_year = 2024
		group by experience_level
	) a
	inner join 
	(
		select experience_level, count(*) as cnt2 from public."Data_Science_Salaries"
		where remote_ratio = 100 and work_year = 2024
		group by experience_level
	) b on a.experience_level = b.experience_level
) t2
) n
	on m.experience_level = n.experience_level



8. AS a Compensation specialist at a Fortune 500 company, you're tasked WITH analyzing salary trends over time. Your objective is to calculate the average salary increase percentage for each experience level and job title between the years 2023 and 2024, helping the company stay competitive IN the talent market.



select a.job_title, a.experience_level, a.rnd2023 , b.rnd2024 , 
(b.rnd2024 :: float / a.rnd2023::float) as per, 
(case when (b.rnd2024 :: float / a.rnd2023::float) > 0 
 and (b.rnd2024 :: float / a.rnd2023::float) < 1 
 then 'Decrease -- ' else 'Increase ++' end) 
as "Trend_Over_Time"
-- (case when (b.rnd2024 :: float / a.rnd2023::float) < 1 then 'ICC+' end) as g1
from
(
select job_title, experience_level, round(avg(salary_in_usd), 2) as rnd2023
from public."Data_Science_Salaries" 
where work_year = 2023
group by job_title, experience_level
order by job_title asc, experience_level asc
)a

inner join

(
select job_title, experience_level, round(avg(salary_in_usd), 2) as rnd2024
from public."Data_Science_Salaries" 
where work_year = 2024
group by job_title, experience_level
order by job_title asc, experience_level asc
) b 
on a.job_title = b.job_title and a.experience_level = b.experience_level
	


9. You're a database administrator tasked with role-based access control for a company's employee database. Your goal is to implement a security measure -- where employees in different experience level (e.g. Entry Level, Senior level etc.) can only access details relevant to their respective experience level, ensuring data confidentiality and minimizing the risk of unauthorized access.



create user 'Entry_level' identified by 'EN'

create view entry_level as
(
	select * from public."Data_Science_Salaries"
	where experience_level = 'EN'
)

grand select on SQL_Case_Study.ENTRY_LEVEL to 'Entry_level'

show privileges






